I have used Python 3.8.10 interpretor and the packeges used are as follows:-
1) pandas
2) datetime
3) warnings

The files used are:-
1) http://data.covid19india.org/csv/latest/cowin_vaccine_data_districtwise.csv
2) https://data.covid19india.org/csv/latest/districts.csv
3) http://censusindia.gov.in/pca/DDW_PCA0000_2011_Indiastatedist.xlsx
4) neighbor-districts.json
5) https://data.covid19india.org/csv/latest/district_wise.csv

To run the assignment, run the command ./assign1.sh on the terminal.

1) When ./assign1.sh command is run, a file is created called 'neighbor-districts-modified.json' which is the modified version of 'neighbor-districts.json' that will contains the modified districts along with the neighbours according to the data given on the 'https://www.covid19india.org/'. The number of districts merged were 611.

2) For this question the file created in question 1 is used('neighbor-districts-modified.json'). I have created a list of dictionary which contains two districts (showing the districts that are neighbour). Then this list is converted into dataframe. The final output file is named as 'edge-graph.csv', which contains every districts pair that are neighbours. I have also taken care that 'ab' and 'ba' both should not be considered at the same time. 

3) In this part, a total of three files are created 'cases_week.csv', 'cases_state.csv' and 'cases_overall.csv'. The dataset used was 'https://data.covid19india.org/csv/latest/districts.csv', and the data given was cumulative. For generating 'cases-overall.csv', I have considered the data of the last day (since the data cumulative). For rest of the question, I have removed cumulation from the data. For generating 'cases-week.csv', data of seven days have been considered and for 'cases-state.csv', data of thirty days have been added to make a month.

4) In this part, a total of three files are created 'districts-peaks.csv', 'state-peaks.csv' and 'overall-peaks.csv'. The cases dataset used was 'https://data.covid19india.org/csv/latest/districts.csv', and the data given was cumulative. I have also used another dataset 'https://data.covid19india.org/csv/latest/district_wise.csv' to generate the codes of the states and districts which was not present in the cases dataset. While considering the cases of week, weeks have been considered in the following manner - Sunday to Saturday and Thursday to Wednesday so that we don't end up missing some data. All the odd weekID's represent the week from Sunday to Saturday and even weekID's represent the week from Thursday to Wednesday.

5) Six files have been generated in this section, by the name of  'district-vaccinated-count-week.csv', 'district-vaccinated-count-month.csv',  'district-vaccinated-count-overall.csv', 'state-vaccinated-count-week.csv', 'state-vaccinated-count-month.csv' and 'state-vaccinated-count-overall.csv'. The dataset used is 'http://data.covid19india.org/csv/latest/cowin_vaccine_data_districtwise.csv', here I have to found out the total population vaccinated with dose1 and dose2 on the time line of week, month and overall. The process was performed for districts, which were further grouped to yield data for the states.

6) Population data has been taken from 'http://censusindia.gov.in/pca/DDW_PCA0000_2011_Indiastatedist.xlsx' dataset, for district, state and overall. For vaccination data, 'http://data.covid19india.org/csv/latest/cowin_vaccine_data_districtwise.csv' is used and ratio is calculated. Then both the dataframes are combined on the basis of districts and states for which the data was cleaned. And finally I have calculated the ratio of ratio thereby creating three csv files, one for each, district, state and overall named 'district-vaccination-population-ratio.csv', 'state-vaccination-population-ratio.csv' and 'overall-vaccination-population-ratio.csv' respectively.

7) This question is on the similar lines with the 6th question, except, in this question we donot operate on the populaton dataset. Here we are calcuating the ratio of covishield to covaxin and for the entries where covaxin = 0, the ratio is set to 'inf'. The output files generated by the program are 'district-vaccine-type-ratio.csv', 'state-vaccine-type-ratio.csv' and 'overall-vaccine-type-ratio.csv'.

8) I have used the dataset of 'vaccinated people'(http://data.covid19india.org/csv/latest/cowin_vaccine_data_districtwise.csv) to find the total people vaccinated and has merged it with the 'total population' dataset(http://censusindia.gov.in/pca/DDW_PCA0000_2011_Indiastatedist.xlsx) on the basis of district/state. Three output files are generated by the code namely, 'overall-vaccinated-dose-ratio.csv', 'district-vaccinated-dose-ratio.csv'and 'state-vaccinated-dose-ratio.csv'.

9) The vaccination dataset was used(http://data.covid19india.org/csv/latest/cowin_vaccine_data_districtwise.csv). For finding the 'rate of vaccination' the 'number of vaccinations' in the list week was calculated which was the divided by 7 to yield the 'rate of vaccination'. other dataset used was the population dataset(http://censusindia.gov.in/pca/DDW_PCA0000_2011_Indiastatedist.xlsx). Both these datasets are merged and 'people left' are calculated. Now to find the days required for vaccination, the 'people left' is divided by 'rate of vaccination'. Then I converted the days to date from the last date in the dataset onwards. The output file is named 'complete-vaccination.csv'.
